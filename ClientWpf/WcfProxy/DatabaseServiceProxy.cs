//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Dto
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PositionDto", Namespace="http://schemas.datacontract.org/2004/07/Common.Dto")]
    public partial class PositionDto : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreatedAtField;
        
        private string EventField;
        
        private string PointsField;
        
        private int UserIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt
        {
            get
            {
                return this.CreatedAtField;
            }
            set
            {
                this.CreatedAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Points
        {
            get
            {
                return this.PointsField;
            }
            set
            {
                this.PointsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IDatabaseService")]
public interface IDatabaseService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/SetPosition", ReplyAction="http://tempuri.org/IDatabaseService/SetPositionResponse")]
    void SetPosition(Common.Dto.PositionDto position);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/SetPosition", ReplyAction="http://tempuri.org/IDatabaseService/SetPositionResponse")]
    System.Threading.Tasks.Task SetPositionAsync(Common.Dto.PositionDto position);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetPositionWithPaging", ReplyAction="http://tempuri.org/IDatabaseService/GetPositionWithPagingResponse")]
    Common.Dto.PositionDto[] GetPositionWithPaging(int pageNumber, int pageSize, System.DateTime startDate, System.DateTime endDate, string[] events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetPositionWithPaging", ReplyAction="http://tempuri.org/IDatabaseService/GetPositionWithPagingResponse")]
    System.Threading.Tasks.Task<Common.Dto.PositionDto[]> GetPositionWithPagingAsync(int pageNumber, int pageSize, System.DateTime startDate, System.DateTime endDate, string[] events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetTotalRows", ReplyAction="http://tempuri.org/IDatabaseService/GetTotalRowsResponse")]
    int GetTotalRows();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetTotalRows", ReplyAction="http://tempuri.org/IDatabaseService/GetTotalRowsResponse")]
    System.Threading.Tasks.Task<int> GetTotalRowsAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IDatabaseServiceChannel : IDatabaseService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DatabaseServiceClient : System.ServiceModel.ClientBase<IDatabaseService>, IDatabaseService
{
    
    public DatabaseServiceClient()
    {
    }
    
    public DatabaseServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public DatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void SetPosition(Common.Dto.PositionDto position)
    {
        base.Channel.SetPosition(position);
    }
    
    public System.Threading.Tasks.Task SetPositionAsync(Common.Dto.PositionDto position)
    {
        return base.Channel.SetPositionAsync(position);
    }
    
    public Common.Dto.PositionDto[] GetPositionWithPaging(int pageNumber, int pageSize, System.DateTime startDate, System.DateTime endDate, string[] events)
    {
        return base.Channel.GetPositionWithPaging(pageNumber, pageSize, startDate, endDate, events);
    }
    
    public System.Threading.Tasks.Task<Common.Dto.PositionDto[]> GetPositionWithPagingAsync(int pageNumber, int pageSize, System.DateTime startDate, System.DateTime endDate, string[] events)
    {
        return base.Channel.GetPositionWithPagingAsync(pageNumber, pageSize, startDate, endDate, events);
    }
    
    public int GetTotalRows()
    {
        return base.Channel.GetTotalRows();
    }
    
    public System.Threading.Tasks.Task<int> GetTotalRowsAsync()
    {
        return base.Channel.GetTotalRowsAsync();
    }
}
